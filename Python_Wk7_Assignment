import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

# --- Task 1: Load and Explore the Dataset ---
def load_and_explore_data():
    """Load the Iris dataset, inspect it, and clean missing values."""
    try:
        # Load dataset
        iris = load_iris()
        df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
        df['species'] = iris.target_names[iris.target]  # Add species column
        
        # Display first 5 rows
        print("=== First 5 Rows ===")
        print(df.head())
        
        # Check data types and missing values
        print("\n=== Dataset Structure ===")
        print(df.info())
        print("\n=== Missing Values ===")
        print(df.isnull().sum())
        
        # Clean missing values (though Iris dataset has none)
        df_cleaned = df.dropna()  # Drop if any exist
        print("\n=== Cleaning: No missing values found ===")
        return df_cleaned
    
    except Exception as e:
        print(f"Error loading dataset: {e}")
        return None

# --- Task 2: Basic Data Analysis ---
def analyze_data(df):
    """Compute statistics and groupby analysis."""
    print("\n=== Basic Statistics ===")
    print(df.describe())
    
    print("\n=== Mean Sepal Length by Species ===")
    print(df.groupby('species')['sepal length (cm)'].mean())
    
    # Interesting finding
    print("\n=== Interesting Finding ===")
    print("Setosa has significantly shorter petals than other species.")

# --- Task 3: Data Visualization ---
def visualize_data(df):
    """Create 4 customized plots."""
    plt.figure(figsize=(15, 10))
    
    # 1. Line Chart (Trend of sepal length by index)
    plt.subplot(2, 2, 1)
    df['sepal length (cm)'].plot(kind='line', title='Trend of Sepal Length', color='green')
    plt.xlabel('Sample Index')
    plt.ylabel('Sepal Length (cm)')
    
    # 2. Bar Chart (Mean petal width by species)
    plt.subplot(2, 2, 2)
    df.groupby('species')['petal width (cm)'].mean().plot(kind='bar', color=['red', 'blue', 'purple'])
    plt.title('Mean Petal Width by Species')
    plt.ylabel('Petal Width (cm)')
    
    # 3. Histogram (Distribution of sepal width)
    plt.subplot(2, 2, 3)
    sns.histplot(df['sepal width (cm)'], bins=15, kde=True, color='orange')
    plt.title('Distribution of Sepal Width')
    
    # 4. Scatter Plot (Sepal length vs. petal length)
    plt.subplot(2, 2, 4)
    sns.scatterplot(data=df, x='sepal length (cm)', y='petal length (cm)', hue='species', palette='viridis')
    plt.title('Sepal vs. Petal Length')
    
    plt.tight_layout()
    plt.savefig('visualizations.png')  # Save plots
    plt.show()

# --- Main Execution ---
if __name__ == "__main__":
    print("===== Data Analysis Assignment =====")
    df = load_and_explore_data()
    if df is not None:
        analyze_data(df)
        visualize_data(df)
    print("\n=== Analysis Complete! ===")
